List of problems:

1. how to generate the URI for each resource based on our modification

The Expected Output:
a. <http://www.edsa-project.eu/jobposting/GATE%20Document_00009>

   --> if ...00009/ (with a trailing slash) is also acceptable, that's easier to handle.

b. <http://www.edsa-project.eu/jobposting/GATE%20Document_00009/SQL>

The Actual Output:
a. <file:/C:/Users/elisa%20sibarani/SARO/Document_00009withDocFeatures.xml>
b. <file:/C:/Users/elisa%20sibarani/SARO/SQL>

The related XSLT (line 30 - 43):
    <param name="autogenerate-fragment-uris" select="'saro'"/>

    <!--<strip-space elements="*"/>
	-->
	
	<template match="krextor-genuri:saro" as="xs:anyURI?">
		<param name="node"/>
		<param name="base-uri"/>
	  
		<apply-templates select="$node" mode="krextor-genuri:saro">
			<with-param name="saro-base-uri" select="$base-uri"/>
		</apply-templates>
	  
	</template>

2. create a triple to define the type of a resource

The Expected Output:
<http://www.edsa-project.eu/jobposting/GATE%20Document_00009>
	a	<http://www.semanticweb.org/elisasibarani/ontologies/2016/0/untitled-ontology-51#JobPosting> .
	
The Actual Output:
--> no triple has been generated by the Krextor

The related XSLT (line 95 - 99):
	<template match="//AnnotationSet/@Name" mode="krextor:main">
		<call-template name="krextor:create-resource">
            <with-param name="type" select="'&saro;jobPosting'"/>
		</call-template>	
	</template>
	
3. generate a triple to define the 'requiresSkill' of each 'Job Role' (the subject of the triple is a 'Job Role' and the object are one or more Skill of type Tool/Product/Topic)

The Expected Output:
<http://www.edsa-project.eu/jobposting/GATE%20Document_00009/Senior%20Insight%20Analyst>
	a	<http://www.semanticweb.org/elisasibarani/ontologies/2016/0/untitled-ontology-51#JobRole> ;
	<http://www.semanticweb.org/elisasibarani/ontologies/2016/0/untitled-ontology-51#requiresSkill>	<http://www.edsa-project.eu/jobposting/GATE%20Document_00009/SQL>, <http://www.edsa-project.eu/jobposting/GATE%20Document_00009/Analytic>, <http://www.edsa-project.eu/jobposting/GATE%20Document_00009/Marketing> .
	
The Actual Output (it was generated as a triple of 'Job Posting' as its subject and the object also wasn't right):
<file:/C:/Users/elisa%20sibarani/SARO/Document_00009withDocFeatures.xml>
	<http://www.semanticweb.org/elisasibarani/ontologies/2016/0/untitled-ontology-51#requiresSkill>	<file:/C:/Users/elisa%20sibarani/SARO/Document_00009withDocFeatures.xml>, <file:/C:/Users/elisa%20sibarani/SARO/Document_00009withDocFeatures.xml>, <file:/C:/Users/elisa%20sibarani/SARO/Document_00009withDocFeatures.xml>, <file:/C:/Users/elisa%20sibarani/SARO/Document_00009withDocFeatures.xml>, <file:/C:/Users/elisa%20sibarani/SARO/Document_00009withDocFeatures.xml> .
	
The related XSLT (line 162 - 232):
	<template match="//Annotation[@Type='SkillTool']/Feature[Name='string']/Value" mode="krextor:main">
		<variable name="id" select="ancestor::Annotation[1]/@Id"/>
		<variable name="freq" select="ancestor::Annotation/Feature[Name='frequencyOfMention']/Value"/>
		<call-template name="krextor:create-resource">
			<with-param name="type" select="'&saro;Tool'"/>
			<with-param name="properties">
				<krextor:property uri="&saro;frequencyOfMention" value="{$freq}"/>
			</with-param>
		</call-template>
		
		<call-template name="krextor:add-uri-property">
			<with-param name="property" select="'&saro;requiresSkill'"/>
		</call-template>
		
	</template>
